{"version":3,"sources":["MDediter/logic.js","MDediter/MDediter.js"],"names":["_callee","regenerator_default","a","wrap","_context","prev","next","html2canvas","document","getElementById","then","canvas","downloadImage","toDataURL","stop","data","encdata","atob","replace","outdata","Uint8Array","length","i","charCodeAt","blob","Blob","window","navigator","msSaveBlob","msSaveOrOpenBlob","href","download","click","MDediter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","_getDisplayImage","apply","arguments","getDisplayImage","state","html","updateMarkdown","bind","assertThisInitialized","toggle","activeTab","Array","fill","tabPane","tab","newArray","slice","setState","react_default","createElement","Fragment","TabPane","tabId","dangerouslySetInnerHTML","__html","event","marked","target","value","_this2","className","Row","Col","xs","sm","md","lg","Card","CardHeader","onChange","defaultValue","CardFooter","Button","id","color","onClick","Nav","tabs","NavItem","NavLink","active","TabContent","Component"],"mappings":"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","file":"static/js/5.3883e466.chunk.js","sourcesContent":["import html2canvas from \"html2canvas\";\n\nexport async function getDisplayImage() {\n    // html2canvas実行\n    html2canvas(document.getElementById(\"target\")).then(function(canvas) {\n        downloadImage(canvas.toDataURL());\n    });\n    // html2canvas(document.getElementById(\"target\"), {\n    //     proxy: true,\n    //     useCORS: true\n    //     }).then(function(canvas) {\n    //         downloadImage(canvas.toDataURL());\n    // });\n}\n    \n\nfunction downloadImage(data) {\n    const fname =\"download.png\";\n    const encdata= atob(data.replace(/^.*,/, ''));\n    const outdata = new Uint8Array(encdata.length);\n\n    for (let i = 0; i < encdata.length; i++) {\n        outdata[i] = encdata.charCodeAt(i);\n    }\n\n    const blob = new Blob([outdata], [\"image/png\"]);\n    if (window.navigator.msSaveBlob) {\n        //IE用\n        window.navigator.msSaveOrOpenBlob(blob, fname);\n    } else {\n        //それ以外？\n        document.getElementById(\"getImage\").href=data; //base64そのまま設定\n        document.getElementById(\"getImage\").download=fname; //ダウンロードファイル名設定\n        document.getElementById(\"getImage\").click(); //自動クリック\n    }\n}","import React, { Component } from 'react';\nimport { getDisplayImage } from \"./logic\";\nimport \"../scss/_custom.scss\";\nimport \"./github.scss\";\nimport { Button, Card, CardFooter, CardHeader, Col, Row } from 'reactstrap';\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap';\nimport marked from \"marked\";\n\nclass MDediter extends Component {\n  // Markdown react  https://tech.innovator.jp.net/entry/2017/12/08/120000\n  constructor(props) {\n    super();\n    this.state = { html :\"\" };\n    this.updateMarkdown = this.updateMarkdown.bind(this);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: new Array(4).fill('1'),\n    };\n  }\n\n  toggle(tabPane, tab) {\n    const newArray = this.state.activeTab.slice()\n    newArray[tabPane] = tab\n    this.setState({\n      activeTab: newArray,\n    });\n  }\n\n  tabPane() {\n    return (\n      <>\n        <TabPane tabId=\"1\">\n          <div dangerouslySetInnerHTML={{ __html: this.state.html }}></div>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <div>{ this.state.html }</div>  \n        </TabPane>\n      </>\n    );\n  }\n  \n  updateMarkdown(event) {\n    this.setState({\n      html: marked(event.target.value)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"7\">\n            <Card>\n              <CardHeader>\n                <i className=\"icon-note\"></i> Input\n              </CardHeader>\n              \n              <textarea className=\"card-body\"  \n                        onChange={this.updateMarkdown} defaultValue=\"## You can write Markdown notation here.\"\n              ></textarea>\n              \n              <CardFooter>\n                  <Button id=\"downloadImageButton\" className=\"btn-lg pull-right\" color=\"primary\" onClick={this.handleClick} >Sava image</Button>\n                  <a id=\"getImage\" href=\"./\" className=\"d-none\" download=\"image.png\">画像保存</a>\n                  {/* <Button id=\"downloadImageButton\" className=\"btn-lg pull-right\" color=\"primary\" onClick={this.handleClick} >Open in a new tab</Button> */}\n              </CardFooter>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"12\" md=\"6\" lg=\"5\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  active={this.state.activeTab[0] === '1'}\n                  onClick={() => { this.toggle(0, '1'); }}\n                >\n                  Preview\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  active={this.state.activeTab[0] === '2'}\n                  onClick={() => { this.toggle(0, '2'); }}\n                 >\n                   Output\n                 </NavLink>\n               </NavItem>\n             </Nav>\n             <TabContent activeTab={this.state.activeTab[0]} className=\"card textarea-style markdown-body\" id=\"target\">\n               {this.tabPane()}\n             </TabContent>\n           </Col>\n        </Row>\n      </div>\n    );\n  }\n  handleClick = () => {\n    getDisplayImage();\n  };\n}\n\nexport default MDediter;\n"],"sourceRoot":""}